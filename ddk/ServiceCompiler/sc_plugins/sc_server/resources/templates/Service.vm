package $package;

import java.io.IOException;
import java.io.OutputStream;
import java.util.Vector;

import eu.linksmart.limbo.handler.*;


public class $class extends ${endPoint}{

	private $OperationsImpl operations;
	private Vector operationsNames;
	private int serverPort;
	private String serverHost;
	private String PID;
	
	private $handlers handlers;
	

	public $class(String serverHost, int serverPort) {
		this.operations = new $OperationsImpl();
		this.operationsNames = new Vector($nOperations);
#foreach($value in $operations)
		this.operationsNames.addElement("$value");
#end
		this.serverHost = serverHost;
		this.serverPort = serverPort;
		this.handlers = new $handlers(this);	
	}

	public Vector getOperationsNames() {
		return this.operationsNames;
	}
	
	public boolean hasOperation(String operationName){
		for(int i=0;i<this.operationsNames.size();i++){
			if(((String)this.operationsNames.elementAt(i)).equalsIgnoreCase(operationName))
				return true;
		}
		return false;
	}
	
	public $OperationsImpl getOperations() {
		return this.operations;
	}

	public String getServerHost() {
		return this.serverHost;
	}
	
	public int getServerPort() {
		return this.serverPort;
	}
	
	
	public String handleRequest(String request, String clientHost) {
			
		this.handlers.handle(request, clientHost);
		return this.handlers.getResponse();
}

}