package $package;

import java.beans.PropertyChangeEvent;

import org.apache.felix.upnp.extra.util.UPnPEventNotifier;
import org.osgi.service.upnp.UPnPLocalStateVariable;


public class ${statevariable.getName()}StateVariable implements UPnPLocalStateVariable{
	final private String NAME = "${statevariable.getName()}";
	final private $statevariable.getVarDataType() DEFAULT_VALUE = ${defaultValues.get(${statevariable.getTypeConstant()})};
	private UPnPEventNotifier notifier;
	private $statevariable.getVarDataType() $statevariable.getName() = DEFAULT_VALUE;

	
	public Object getCurrentValue() {
		return $statevariable.getName();
	}

	
	public String[] getAllowedValues() {
		return null;
	}

	
	public Object getDefaultValue() {
		return DEFAULT_VALUE;
	}

	
	public Class getJavaDataType() {
		return ${statevariable.getVarDataType()}.class;
	}

	
	public Number getMaximum() {
		
		return null;
	}

	
	public Number getMinimum() {
		
		return null;
	}

	
	public String getName() {
		
		return NAME;
	}

	
	public Number getStep() {
		
		return null;
	}

	
	public String getUPnPDataType() {
		return $statevariable.getTypeConstant();
	}

	
	public boolean sendsEvents() {
		return true;
	}
	
	public void setNotifier(UPnPEventNotifier notifier){
		this.notifier = notifier;
	}
	
	public void set($statevariable.getVarDataType() value) {
		if (!value.equals(${statevariable.getName()})) {
			${statevariable.getVarDataType()} oldValue = ${statevariable.getName()};
			${statevariable.getName()} = value;
			if (notifier != null)
			notifier.propertyChange(new PropertyChangeEvent(this,NAME,oldValue,value));
		}
	}
	public $statevariable.getVarDataType() get() {
		return this.${statevariable.getName()};
		
	}
}
