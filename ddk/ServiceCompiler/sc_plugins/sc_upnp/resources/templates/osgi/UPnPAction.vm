package $package;

import java.util.Dictionary;
import java.util.Hashtable;

import org.osgi.service.upnp.UPnPAction;
import org.osgi.service.upnp.UPnPStateVariable;

$importTypes

public class ${class}Action implements UPnPAction {

	final private String NAME = "${action.getName()}";
#foreach($ActionArgument in $action.getArgumentsList())

	final private String ${ActionArgument.getArgumentName().toUpperCase()} = "${ActionArgument.getArgumentName().toLowerCase()}";
#end
#set($comma = ",")	
#if($action.getInputArgumentList().size() != 0)
	final private String[] IN_ARG_NAMES = new String[]{#set($i = $action.getInputArgumentList().size())#set($n = 0)#foreach($ActionArgument in $action.getInputArgumentList())#set($n=$n+1)#if($n<$i)$ActionArgument.getArgumentName().toUpperCase()$comma#else$ActionArgument.getArgumentName().toUpperCase()#end#end};
#end
#if($action.getOutputArgumentList().size() != 0)
	final private String[] OUT_ARG_NAMES = new String[]{#set($i = $action.getOutputArgumentList().size())#set($n = 0)#foreach($ActionArgument in $action.getOutputArgumentList())#set($n=$n+1)#if($n<$i)$ActionArgument.getArgumentName().toUpperCase()$comma#else$ActionArgument.getArgumentName().toUpperCase()#end#end};
#end

#foreach($ActionArgument in $action.getArgumentsList())
	private ${ActionArgument.getRelatedStateVariableName()}StateVariable ${ActionArgument.getRelatedStateVariableName()};
#end
	private $service service;

	public ${class}Action(#foreach($ActionArgument in $action.getArgumentsList())$ActionArgument.getArgumentName()StateVariable $ActionArgument.getArgumentName()$comma#end ${service} service) {
#foreach($ActionArgument in $action.getArgumentsList())
		this.${ActionArgument.getArgumentName()} = ${ActionArgument.getArgumentName()};
#end		
		this.service = service;
	}

	public String[] getInputArgumentNames() {
		return #if($action.getInputArgumentList().size()==0)null#else IN_ARG_NAMES#end;
	}

	public String getName() {
		return NAME;
	}

	public String[] getOutputArgumentNames() {
		return #if($action.getOutputArgumentList().size()==0)null#else OUT_ARG_NAMES#end;
	}

	public String getReturnArgumentName() {
		return null;
	}

	public UPnPStateVariable getStateVariable(String argumentName) {

#set($n=0)
#foreach($ActionArgument in $action.getArgumentsList())
#if($n == 0)
		if (argumentName.equals(${ActionArgument.getArgumentName().toUpperCase()})) return ${ActionArgument.getArgumentName()};
#else
		else if (argumentName.equals(${ActionArgument.getArgumentName().toUpperCase()})) return ${ActionArgument.getArgumentName()};	
#end
#set($n=$n+1)
#end
#if($action.getArgumentsList().size()!= 0)
		else return null;
#else
		return null;
#end
	}

	public Dictionary invoke(Dictionary args) throws Exception {

		Hashtable result = new Hashtable();

#if($operation.getOutputType() != "void")
		$operation.getOutputType() res = this.service.${action.getName()}(#set($i = $action.getInputArgumentList().size())#set($n = 0)#foreach($Parts in $operation.getInputParts())#set($n=$n+1)#if($n<$i)(${Parts.getType()})args.get(${Parts.getName().toUpperCase()})$comma#else (${Parts.getType()})args.get(${Parts.getName().toUpperCase()})#end#end);
#else
		this.service.${action.getName()}(#set($i = $action.getInputArgumentList().size())#set($n = 0)#foreach($Parts in $operation.getInputParts())#set($n=$n+1)#if($n<$i)(${Parts.getType()})args.get(${Parts.getName().toUpperCase()})$comma#else (${Parts.getType()})args.get(${Parts.getName().toUpperCase()})#end#end);
#end	
#foreach($ActionArgument in $action.getOutputArgumentList())
#if($action.getOutputArgumentList().size() == 1)
		result.put(${ActionArgument.getArgumentName().toUpperCase()}, res);
#else
		result.put(${ActionArgument.getArgumentName().toUpperCase()}, res.get${ActionArgument.getArgumentName()}());	
#end
#end
		return result;
	}

}






