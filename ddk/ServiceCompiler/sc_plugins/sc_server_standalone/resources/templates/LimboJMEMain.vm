package $package;


$imports


public class $class extends MIDlet implements CommandListener {

	public static TextBox textBox;
	private Command exitCommand;
	private Command startServer;

	public $class () {
		textBox = new TextBox("","Welcome To Limbo Web Server",1000,0);
		startServer = new Command("StartServer", Command.SCREEN,1);
		exitCommand = new Command("Exit", Command.EXIT,1);
		textBox.addCommand(startServer);
		textBox.addCommand(exitCommand);
		textBox.setCommandListener(this);
	}

	public void runServer(){
		textBox.setString("Initiating...");
#set($port = 9002)
#if($protocol != "BTProtocol")
#foreach($PortType in $serverThreads)
		new ${PortType.getQName().getLocalPart()}LimboServer(new ${protocol}(), $port).runServer();
#set($port = $port+1)
#end
#else
#foreach($PortType in $serverThreads)
		BTProtocol ${PortType.getQName().getLocalPart().toLowerCase()}Protocol = new BTProtocol();
		${PortType.getQName().getLocalPart().toLowerCase()}Protocol.setServiceName("${PortType.getQName().getLocalPart()}");
		new ${PortType.getQName().getLocalPart()}LimboServer(${PortType.getQName().getLocalPart().toLowerCase()}Protocol,-1).runServer();
#end
#end
	}


	protected void destroyApp(boolean arg0) throws MIDletStateChangeException {}


	protected void pauseApp() {}


	protected void startApp() throws MIDletStateChangeException {Display.getDisplay(this).setCurrent(textBox);}


	public void commandAction(Command cmd, Displayable disp)
	 {
		if (cmd==exitCommand){
			try{
				destroyApp(false);
			} catch (Exception e) {}
			notifyDestroyed();
		}
		if (cmd==startServer){
			this.runServer();
		}
	}

}
