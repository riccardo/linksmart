package $package;

$imports

public class $class implements $interface{

	
	public $class() {
		super();
	}
	
	@Override	
	public String communicateWithServer(String request, String host, int port) {
		
		String response = "";
		Socket clientSocket;
		try {
			clientSocket = new Socket(host, port);
			OutputStream cos = clientSocket.getOutputStream();
			cos.write(request.getBytes());
			InputStream cis = clientSocket.getInputStream();
			int ch = 0;
			int chCount = 0;
			boolean condition = true;
			int content = -1;
        		StringBuffer sb = new StringBuffer();
			StringBuffer auxiliar = new StringBuffer();
			while(condition){
				ch = cis.read();
				sb.append((char)ch);
				auxiliar.append((char)ch);
				if((char)ch == '\n'){
					String line = auxiliar.toString();
					if(line.toLowerCase().startsWith("content-length")){
						line = line.substring(0,line.length()-2);
						StringTokenizer st = new StringTokenizer(line,": ");
						st.nextToken();
						content = Integer.parseInt(st.nextToken());
					}
					else if(line.equalsIgnoreCase("\r\n"))
						condition = false;
					auxiliar = new StringBuffer();
				}
			}
			if(content != -1) {
				while(chCount<content){
					ch = cis.read();
					sb.append((char)ch);
					chCount++;
				}
				response = sb.toString();
			}else {
				response = sb.toString();
				byte[] buffer = new byte[1024] ;
				int n ;
				do {
				
	                    		n = cis.read(buffer);
	                    		if (n > 0)
	                        		response = response.concat(new String(buffer, 0, n));
	                	} while (n != -1);
			}
		} catch (UnknownHostException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}	
		if(response == "")
			return null;
		return response;
	}
	
}
