<?xml version="1.0" encoding="UTF-8"?>

<!-- Build file for LinkSmartMiddlewareClients
	 author: Marco Tiemann -->

<!--
		The following properties must be pre-defined in the parent ant script:
		- javaLibDir directory containing 3rd party Java libraries -
		rootBuildDir base directory for all intermediate outputs -
		rootDistributionDir directory for compiled bundles
	-->

<project name="LinkSmartMiddlewareClients" default="fail" xmlns:ivy="antlib:org.apache.ivy.ant">

	<!-- from previous build.xml -->

	<dirname property="project.basedir" file="${ant.file.LinkSmartMiddlewareClients}" />

	<property name="src" value="${project.basedir}/src" />
	<!-- provide what address to create axis stub for -->
	<property name="wsdl" value="http://localhost:8082/axis/services/TrustManager?wsdl" />

	<!-- provide axis lib path here -->
	<path id="axis.classpath">
		<fileset dir="${lib.dir}/axis/">
			<include name="*.jar" />
		</fileset>

	</path>

	<target name="init">
		<mkdir dir="${src}" />
	</target>

	<target name="make-axis" depends="init">
		<taskdef resource="axis-tasks.properties" classpathref="axis.classpath" />
		<axis-wsdl2java output="${src}" testcase="false" verbose="true" skeletondeploy="true" helpergen="true" url="${wsdl}">
			<mapping namespace="http://axis.apache.org/ns/interop" package="interop" />
		</axis-wsdl2java>
	</target>

	<!-- properties -->

	<property name="moduleName" value="LinkSmartMiddlewareClients" />
	<property name="revision" value="1.0.0" />

	<property name="src.dir" value="${basedir}/src" />
	<property name="test.dir" value="${basedir}/test" />
	<property name="test.build.dir" value="${rootBuildDir}/${moduleName}/test" />
	<property name="build.dir" value="${rootBuildDir}/${moduleName}/bin" />
	<property name="lib.dir" value="${basedir}/../LinkSmartWSProvider/lib" />
	<property name="dist.dir" value="${rootDistributionDir}" />
	<property name="targetPlatform.dir" value="${basedir}/../target_platform" />

	<!-- paths -->

	<path id="classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${targetPlatform.dir}">
			<include name="**/*.jar" />
		</fileset>
		<pathelement path="${build.dir}" />
	</path>

	<path id="test-classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${targetPlatform.dir}">
			<include name="**/*.jar" />
		</fileset>
		<pathelement path="${build.dir}" />
		<pathelement path="${test.build.dir}" />
	</path>

	<!-- targets -->

	<!-- default target fails -->
	<target name="fail">
		<fail message="please use the root ant build file" />
	</target>

	<!-- set up local build environment -->
	<target name="setup-local">
		<echo message="Setting up local build environment" />
		<property name="antlib.dir" value="${basedir}/../antlibs" />
		<path id="antlib.path">
			<fileset dir="${antlib.dir}" includes="*.jar" />
		</path>
		<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="antlib.path" />
	</target>

	<!-- local make -->
	<target name="make-local" depends="setup-local">
		<echo message="Calling make locally" />
		<antcall target="make" />
	</target>

	<!-- local test -->
	<target name="test-local" depends="setup-local">
		<echo message="Calling test locally" />
		<antcall target="test" />
	</target>

	<!-- set up build environment -->
	<target name="resolve">
		<echo message="Setting up build environment" />
		<ivy:resolve transitive="true" />
		<ivy:retrieve transitive="true" type="jar" pattern="${targetPlatform.dir}/[artifact]-[revision].[ext]" />
		<ivy:retrieve transitive="true" type="jars" pattern="${targetPlatform.dir}/[artifact]-[revision].[ext]" />
		<ivy:retrieve transitive="true" type="bundle" pattern="${targetPlatform.dir}/[artifact]-[revision].[ext]" />
	</target>

	<!-- build -->
	<target name="build" depends="resolve">
		<echo message="Compiling" />
		<mkdir dir="${build.dir}" />
		<javac destdir="${build.dir}" classpathref="classpath">
			<src path="${src.dir}" />
		</javac>
	</target>

	<!-- package -->
	<target name="jar" depends="build">
		<echo message="Packaging" />
		<mkdir dir="${dist.dir}" />
		<jar jarfile="${dist.dir}/${moduleName}-${revision}.jar" manifest="${basedir}/META-INF/MANIFEST.MF">
			<fileset dir="${build.dir}" />
			<fileset dir="${basedir}" includes="OSGI-INF/*" />
		</jar>
	</target>

	<!-- publish -->
	<target name="publish" depends="jar">
		<echo message="Publishing" />
		<ivy:publish pubrevision="${revision}" resolver="local" forcedeliver="true" overwrite="true" publishivy="false">
			<artifacts pattern="${dist.dir}/[artifact]-${revision}.[ext]" />
		</ivy:publish>
	</target>

	<!-- make -->
	<target name="make" depends="jar,publish">
		<echo message="Compiled from: ${basedir}" />
		<echo message="Compiled to: ${build.dir}" />
		<echo message="Published as: ${rootDistributionDir}/${moduleName}-${revision}.jar" />
	</target>

	<!-- test -->
	<target name="test" depends="make">
		<echo message="Testing" />
		<mkdir dir="${test.build.dir}" />
	</target>

	<!-- clean -->
	<target name="clean">
		<echo message="Cleaning" />
		<!-- files in build directory -->
		<delete dir="${build.dir}" includeEmptyDirs="true" failonerror="false" />
		<!-- files in distribution directory -->
		<delete dir="${dist.dir}" includeEmptyDirs="true" failonerror="false" />
		<delete file="${rootDistributionDir}/${moduleName}-${revision}.jar" failonerror="false" />
		<!-- files in test directory -->
		<delete dir="${test.build.dir}" includeEmptyDirs="true" failonerror="false" />
	</target>

</project>