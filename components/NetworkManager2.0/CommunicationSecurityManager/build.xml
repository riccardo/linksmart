<?xml version="1.0" encoding="UTF-8"?>

<project name="CommunicationSecurityManager" default="fail" xmlns:ivy="antlib:org.apache.ivy.ant">

	<!-- properties -->
	<property name="moduleName" value="eu.linksmart.security.communication" />
	<property name="revision" value="2.0.0" />
	<property name="src.dir" value="${basedir}/src" />
	<property name="build.dir" value="${rootBuildDir}/${moduleName}/bin" />
	<property name="dist.dir" value="${rootDistributionDir}" />
	<property name="javadoc.dir" value="${basedir}/doc" />
	<property name="targetPlatform.dir" value="${basedir}/../../target_platform" />
	<property name="antlib.dir" value="${basedir}/../../../antlibs" />

	<!-- paths -->

	<path id="classpath">
		<fileset dir="${targetPlatform.dir}">
			<include name="**/*.jar" />
		</fileset>
		<pathelement path="${build.dir}" />
	</path>

	<!-- targets -->

	<!-- default target fails -->
	<target name="fail">
		<fail message="please use the root ant build file" />
	</target>

	<!-- set up local build environment -->
	<target name="setup-local">
		<echo message="Setting up local build environment" />
		
		<path id="antlib.path">
			<fileset dir="${antlib.dir}" includes="*.jar" />
		</path>
		<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="antlib.path" />
	</target>

	<!-- local make -->
	<target name="make-local" depends="setup-local">
		<echo message="Calling make locally" />
		<antcall target="make" />
	</target>

	<!-- set up build environment -->
	<target name="resolve">
		<echo message="Setting up build environment" />
		<ivy:resolve transitive="true" />
		<ivy:retrieve transitive="true" type="jar" pattern="${targetPlatform.dir}/[artifact]-[revision].[ext]" />
		<ivy:retrieve transitive="true" type="jars" pattern="${targetPlatform.dir}/[artifact]-[revision].[ext]" />
		<ivy:retrieve transitive="true" type="bundle" pattern="${targetPlatform}/[artifact]-[revision].[ext]" />
	</target>

	<!-- build -->
	<target name="build" depends="resolve">
		<echo message="Compiling" />
		<mkdir dir="${build.dir}" />
		<javac destdir="${build.dir}" classpathref="classpath">
			<src path="${src.dir}" />
		</javac>
	</target>

	<!-- package -->
	<target name="jar" depends="build">
		<echo message="Packaging" />
		<mkdir dir="${dist.dir}" />
		<jar jarfile="${dist.dir}/${moduleName}-${revision}.jar" manifest="${basedir}/META-INF/MANIFEST.MF">
			<fileset dir="${build.dir}" />
			<fileset dir="${basedir}" includes="OSGi-INF/*" />
			<fileset dir="${basedir}" includes="resources/**" />
		</jar>
	</target>

	<!-- publish -->
	<target name="publish" depends="jar">
		<echo message="Publishing" />
		<ivy:publish pubrevision="${revision}" resolver="local" forcedeliver="true" overwrite="true" publishivy="false">
			<artifacts pattern="${dist.dir}/[artifact]-${revision}.[ext]" />
		</ivy:publish>
	</target>

	<!-- make -->
	<target name="make" depends="jar,publish">
		<echo message="Compiled from: ${basedir}" />
		<echo message="Compiled to: ${build.dir}" />
		<echo message="Published as: ${rootDistributionDir}/${moduleName}-${revision}.jar" />
	</target>

	<!-- clean -->
	<target name="clean">
		<echo message="Cleaning" />
		<!-- files in build directory -->
		<delete dir="${build.dir}" includeEmptyDirs="true" failonerror="false" />
		<!-- files in distribution directory -->
		<delete dir="${dist.dir}" includeEmptyDirs="true" failonerror="false" />
		<delete file="${rootDistributionDir}/${moduleName}-${revision}.jar" failonerror="false" />
	</target>

</project>