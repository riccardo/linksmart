<?xml version="1.0" encoding="UTF-8"?>

<!-- Build file for LinkSmart ContextManager
	 author: Marco Tiemann --> 

<!-- The following properties must be pre-defined in the parent ant script:
	 - javaLibDir          directory containing 3rd party Java libraries
	 - rootBuildDir        base directory for all intermediate outputs
	 - rootDistributionDir directory for compiled bundles -->	

<project name="ContextManager" default="fail" 
		xmlns:ivy="antlib:org.apache.ivy.ant">
	
	<!-- properties -->
	
	<property name="moduleName" value="ContextManager"/>
	<property name="revision" value="1.0.0"/>
	
	<property name="src.dir" value="${basedir}/src"/>
	<property name="test.dir" value="${basedir}/test"/>
	<property name="test.build.dir" value="${rootBuildDir}/${moduleName}/test"/>
	<property name="build.dir" value="${rootBuildDir}/${moduleName}/bin"/>
	<property name="lib.dir" value="${rootBuildDir}/${moduleName}/lib"/>
	<property name="bundle.lib.dir" value="${basedir}/lib"/>
	<property name="dist.dir" value="${rootDistributionDir}/${moduleName}"/>
	
	<!-- paths -->
	
	<path id="classpath">
		<fileset dir="${lib.dir}">
	    	<include name="**/*.jar"/>
	   	</fileset>
	   	<pathelement path="${build.dir}"/>
	</path>
	
	<path id="test-classpath">
		<fileset dir="${lib.dir}">
	    	<include name="**/*.jar"/>
	   	</fileset>
	   	<pathelement path="${build.dir}"/>
		<pathelement path="${test.build.dir}"/>
	</path>
	
	<!-- targets -->
	
	<!-- default target fails to encourage using the distribution build file -->
	<target name="fail">
  		<fail message="please use the root ant build file"/>
 	</target>
	
	<!-- set up local build environment -->
	<target name="setup-local">
		<echo message="Setting up local build environment"/>
		<property name="antlib.dir" value="${basedir}/../antlibs"/>	    
		<path id="antlib.path">
	   		<fileset dir="${antlib.dir}" includes="*.jar"/>
   		</path>
   		<taskdef resource="org/apache/ivy/ant/antlib.xml" 
		   		uri="antlib:org.apache.ivy.ant" classpathref="antlib.path"/>
	</target>

	<!-- local make -->
	<target name="make-local" depends="setup-local">
		<echo message="Calling make locally"/>
		<antcall target="make"/>
	</target>
	
	<!-- local test -->
	<target name="test-local" depends="setup-local">
		<echo message="Calling test locally"/>
		<antcall target="test"/>
	</target>
	
	<!-- set up build environment -->
	<target name="resolve">
		<echo message="Setting up build environment"/>
		<ivy:resolve transitive="false"/>	
		<ivy:retrieve transitive="false" type="jar" 
				pattern="${lib.dir}/[artifact]-[revision].[ext]"/>
		<ivy:retrieve transitive="false" type="jars" 
				pattern="${lib.dir}/[artifact]-[revision].[ext]"/>
		<ivy:retrieve transitive="false" type="bundle" 
				pattern="${lib.dir}/[artifact]-[revision].[ext]"/>
		<!--
			FIXME: workaround until Ivy is being used, then remove here and
			uncomment in ivy.xml
		-->
		<mkdir dir="${lib.dir}/drools5.1"/>
		<mkdir dir="${lib.dir}/drools5.1/lib"/>
		<copy file="${bundle.lib.dir}/drools5.1/lib/antlr-runtime-3.1.3.jar" 
				todir="${lib.dir}/drools5.1/lib" />
		<copy file="${bundle.lib.dir}/drools5.1/lib/ecj-3.5.1.jar" 
				todir="${lib.dir}/drools5.1/lib" />
		<copy file="${bundle.lib.dir}/drools5.1/lib/joda-time-1.6.jar" 
				todir="${lib.dir}/drools5.1/lib" />
		<copy file="${bundle.lib.dir}/drools5.1/lib/jsr94-1.1.jar" 
				todir="${lib.dir}/drools5.1/lib" />
		<copy file="${bundle.lib.dir}/drools5.1/lib/mvel2-2.0.16.jar" 
				todir="${lib.dir}/drools5.1/lib" />
		<copy file="${bundle.lib.dir}/drools5.1/drools-api-5.1.0.jar" 
				todir="${lib.dir}/drools5.1" />
		<copy file="${bundle.lib.dir}/drools5.1/drools-compiler-5.1.0.jar" 
				todir="${lib.dir}/drools5.1" />
		<copy file="${bundle.lib.dir}/drools5.1/drools-core-5.1.0.jar" 
				todir="${lib.dir}/drools5.1" />
		<copy file="${bundle.lib.dir}/drools5.1/drools-jsr94-5.1.0.jar" 
				todir="${lib.dir}/drools5.1" />
	</target>

	<!-- build -->
	<target name="build" depends="resolve">
		<echo message="Compiling"/>
		<mkdir dir="${build.dir}"/>
		<javac destdir="${build.dir}" classpathref="classpath">   
			<src path="${src.dir}"/>
		</javac>
	</target>
	
	<!-- package -->
	<target name="jar" depends="build">
		<echo message="Packaging"/>
		<mkdir dir="${dist.dir}"/>
		<jar jarfile="${dist.dir}/${moduleName}-${revision}.jar" 
			manifest="${basedir}/META-INF/MANIFEST.MF">
			<fileset dir="${build.dir}" />
			<fileset dir="${lib.dir}/../" excludes="bin/,lib/org.osgi.*,lib/axis*,lib/LinkSmart*,lib/log4j*" />
			<fileset dir="${basedir}" includes="OSGI-INF/, resources/" />
		</jar>
	</target>
	
	<!-- publish -->
	<target name="publish" depends="jar">
		<echo message="Publishing"/>
		<ivy:publish pubrevision="${revision}" resolver="local"
			   forcedeliver="true" overwrite="true">
			<artifacts pattern="${dist.dir}/[artifact]-${revision}.[ext]"/>
		</ivy:publish>
	</target>
	
	<!-- make -->
	<target name="make" depends="jar,publish">
		<echo message="Compiled from: ${basedir}"/>
		<echo message="Compiled to: ${build.dir}"/>
		<echo message="Published as: ${rootDistributionDir}/${moduleName}.jar"/>
	</target>
					
	<!-- test -->
	<target name="test" depends="make">
		<echo message="Testing"/>
		<mkdir dir="${test.build.dir}"/>
	</target>
	
	<!-- clean -->
	<target name="clean">
		<echo message="Cleaning"/>
		<!-- files in build directory -->
		<delete dir="${build.dir}" includeEmptyDirs="true" failonerror="false"/>		
		<delete dir="${lib.dir}" includeEmptyDirs="true" failonerror="false"/>
		<!-- files in distribution directory -->
		<delete dir="${dist.dir}" includeEmptyDirs="true" failonerror="false"/>
		<delete file="${rootDistributionDir}/${moduleName}.jar" failonerror="false"/>
		<!-- files in test directory -->
		<delete dir="${test.build.dir}" includeEmptyDirs="true" failonerror="false"/>
	</target>
	
</project>