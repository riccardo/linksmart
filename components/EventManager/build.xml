<!--
  Copyright (C) 2006-2010 
                          the HYDRA consortium, EU project IST-2005-034891
  
  This file is part of LinkSmart.
  
  LinkSmart is free software: you can redistribute it and/or modify
  it under the terms of the GNU LESSER GENERAL PUBLIC LICENSE
  version 3 as published by the Free Software Foundation.
  
  LinkSmart is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU Lesser General Public License for more details.
  
  You should have received a copy of the GNU Lesser General Public
  License along with LinkSmart.  If not, see <http://www.gnu.org/licenses/>.
-->
<!--
Local build file for the Event Manager
-->
<project name="EventManager" default="make-local" xmlns:ivy="antlib:org.apache.ivy.ant">
  <target name="fail">
    <fail message="please use the root ant build file"/>
  </target>
 
  <property name="moduleName" value="EventManager"/>
  <property name="rootBuildDir" value="${basedir}/../../build"/>
  <property name="rootDistributionDir" value="${basedir}/../../distribution"/>
  <property name="src.dir" value="${basedir}/src"/>
  <property name="test.dir" value="${basedir}/test"/>
  <property name="build.dir" value="${rootBuildDir}/${moduleName}/bin"/>
  <property name="lib.dir" value="${basedir}/../LinkSmartWSProvider/lib"/>
  <property name="distribution.dir" value="${rootDistributionDir}"/>
  <property name="resources.dir" value="${basedir}/resources"/>
<property name="targetPlatform.dir" value="${basedir}/../target_platform" />
  <property name="revision" value="1.0.0"/>
  
  <path id="classpath">
    <fileset dir="${lib.dir}">
      <include name="**/*.jar"/>
    </fileset>
	<fileset dir="${targetPlatform.dir}">
	    	<include name="**/*.jar"/>
	   	</fileset>
    <pathelement path="${build.dir}"/>
  </path>
  
  <target name="make" depends="jar, publish">
    <echo message="Compiling source from ${basedir} to ${build.dir} and then distribute to ${distribution.dir}"/>
  </target>
  
  <!-- publish -->
	<target name="publish" depends="jar">
		<echo message="Publishing" />
		<ivy:publish pubrevision="${revision}" resolver="local"
			forcedeliver="true" overwrite="true" publishivy="false">
			<artifacts pattern="${distribution.dir}/[artifact]-${revision}.[ext]" />
		</ivy:publish>
	</target>

  <!-- Local versions of targets, setting properties so it may be called from this directory -->
  <target name="local">
    <property name="antlib.dir" value="${basedir}/../antlibs"/>
    
    <path id="antlib.path">
      <fileset dir="${antlib.dir}" includes="*.jar"/>
    </path>
    <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="antlib.path"/>
  </target>

  <target name="make-local" depends="local">
    <antcall target="make"/>
  </target>

  <target name="test-local" depends="local">
    <antcall target="test"/>
  </target>

  <target name="doc-local" depends="local">
    <antcall target="doc"/>
  </target>

  <!-- Local versions -->

  <target name="resolve">
    <ivy:resolve transitive="true"/>	
    <ivy:retrieve transitive="true" type="jar" pattern="${targetPlatform.dir}/[artifact]-[revision].[ext]"/>
  	<ivy:retrieve transitive="true" type="jars" pattern="${targetPlatform.dir}/[artifact]-[revision].[ext]"/>
    <ivy:retrieve transitive="true" type="pom" pattern="${targetPlatform.dir}/[artifact]-[revision].[ext]"/>
    <ivy:retrieve transitive="true" type="bundle" pattern="${targetPlatform.dir}/[artifact]-[revision].[ext]"/> 
  </target>
  
  <target name="clean">
    <delete dir="${build.dir}" includeEmptyDirs="true"  failonerror="false"/>
    <delete dir="${lib.dir}" includeEmptyDirs="true"  failonerror="false"/>
    <!-- FIXME: Eclipse output -->
    <delete dir="example/WaterMeter/bin/" includeEmptyDirs="true"  failonerror="false"/>
    <delete dir="example/TrendDisplay/bin/" includeEmptyDirs="true"  failonerror="false"/>
  </target>

  <target name="build" depends="resolve">
    <mkdir dir="${build.dir}"/>
    <javac destdir="${build.dir}" classpathref="classpath">   
      <src path="${src.dir}"/>
      <src path="${test.dir}"/>
    </javac>
  </target>
  
  <target name="jar" depends="build">
    <mkdir dir="${distribution.dir}"/>
	<jar jarfile="${distribution.dir}/${moduleName}-${revision}.jar" 
				manifest="${basedir}/META-INF/MANIFEST.MF">
			<fileset dir="${build.dir}" />
			<fileset dir="${basedir}" includes="OSGI-INF/*" />
			<fileset dir="${basedir}" includes="resources/**" />
		</jar>
  </target>

  <target name="doc" depends="build">
    <javadoc packagenames="eu.linksmart.eventmanager.*"
           sourcepath="src"
           destdir="${distribution.dir}/api"
	    excludepackagenames="eu.linksmart.eventmanager.subscriber.client.*"
           author="true"
           version="true"
           use="true"
	    classpathref="classpath"
           windowtitle="Event Manager API">
    <doctitle><![CDATA[<h1>Event Manager</h1>]]></doctitle>
    <bottom><![CDATA[<i>Copyright &#169; 2010 LinkSmart.</i>]]></bottom>
    <link href="http://download.oracle.com/javase/1.5.0/docs/api/"/>
  </javadoc>
  </target>
  <!-- Copy JavaDoc to temporary place:
  scp -r ../../../distribution/ddk/ServiceCompiler/sc_framework/api/ marius@fh.daimi.au.dk:/users/marius/public_html/temp/ServiceCompiler
  -->
  
  <target name="test" depends="make">
    <junit fork="yes" haltonfailure="yes">
      <classpath>
	 <path refid="classpath"/>
      </classpath>
      <formatter type="brief" usefile="false"/>
      <batchtest fork="yes">
	 <fileset dir="${test.dir}">
	   <include name="**/*Test*.java"/>
	 </fileset>
      </batchtest>
    </junit>
  </target>
</project>
