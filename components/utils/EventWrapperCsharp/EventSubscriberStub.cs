//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Runtime.Serialization.ContractNamespaceAttribute("http://eventmanager.linksmart.eu", ClrNamespace = "eventmanager.linksmart.eu")]

namespace  eu.linksmart.eventing.EventManagerStub
{
    using System.Runtime.Serialization;


    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace = "http://eventmanager.linksmart.eu", ConfigurationName = "EventSubscriber")]
    public interface EventSubscriber
    {

        [System.ServiceModel.OperationContractAttribute(Action = "http://eventmanager.linksmart.eu/EventSubscriber/notify", ReplyAction = "http://eventmanager.linksmart.eu/EventSubscriber/notifyResponse")]
        bool notify(string topic, Part[] parts);
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface EventSubscriberChannel : EventSubscriber, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EventSubscriberClient : System.ServiceModel.ClientBase<EventSubscriber>, EventSubscriber
    {

        public EventSubscriberClient()
        {
        }

        public EventSubscriberClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
        {
        }

        public EventSubscriberClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public EventSubscriberClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public EventSubscriberClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
        {
        }

        public bool notify(string topic, Part[] parts)
        {
            return base.Channel.notify(topic, parts);
        }
    }
}