/*
 * In case of German law being applicable to this license agreement, the following warranty and liability terms shall apply:
 *
 * 1. Licensor shall be liable for any damages caused by wilful intent or malicious concealment of defects.
 * 2. Licensor's liability for gross negligence is limited to foreseeable, contractually typical damages.
 * 3. Licensor shall not be liable for damages caused by slight negligence, except in cases 
 *    of violation of essential contractual obligations (cardinal obligations). Licensee's claims for 
 *    such damages shall be statute barred within 12 months subsequent to the delivery of the software.
 * 4. As the Software is licensed on a royalty free basis, any liability of the Licensor for indirect damages 
 *    and consequential damages - except in cases of intent - is excluded.
 *
 * This limitation of liability shall also apply if this license agreement shall be subject to law 
 * stipulating liability clauses corresponding to German law.
 */
ï»¿//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.1.
// 


/// <remarks/>
// CODEGEN: The optional WSDL extension element 'binding' from namespace 'http://IoT.eu.com/' was not handled.
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="FileSystemDevicebind", Namespace="http://IoT.eu.com/")]
public partial class FileSystemDevice : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback clearFileOperationCompleted;
    
    private System.Threading.SendOrPostCallback copyOperationCompleted;
    
    private System.Threading.SendOrPostCallback createDirectoryOperationCompleted;
    
    private System.Threading.SendOrPostCallback createFileOperationCompleted;
    
    private System.Threading.SendOrPostCallback getIDOperationCompleted;
    
    private System.Threading.SendOrPostCallback existsPathOperationCompleted;
    
    private System.Threading.SendOrPostCallback getDirectoryEntriesOperationCompleted;
    
    private System.Threading.SendOrPostCallback getFileOperationCompleted;
    
    private System.Threading.SendOrPostCallback getFreeSpaceOperationCompleted;
    
    private System.Threading.SendOrPostCallback getSizeOperationCompleted;
    
    private System.Threading.SendOrPostCallback getStatFSOperationCompleted;
    
    private System.Threading.SendOrPostCallback moveOperationCompleted;
    
    private System.Threading.SendOrPostCallback readFileOperationCompleted;
    
    private System.Threading.SendOrPostCallback removeDirectoryOperationCompleted;
    
    private System.Threading.SendOrPostCallback removeFileOperationCompleted;
    
    private System.Threading.SendOrPostCallback setFilePropertiesOperationCompleted;
    
    private System.Threading.SendOrPostCallback setFilePropertyOperationCompleted;
    
    private System.Threading.SendOrPostCallback truncateFileOperationCompleted;
    
    private System.Threading.SendOrPostCallback writeFileOperationCompleted;
    
    /// <remarks/>
    public FileSystemDevice() {
        this.Url = "http://localhost:8083/services/FileSystemDevice";
    }
    
    /// <remarks/>
    public event clearFileCompletedEventHandler clearFileCompleted;
    
    /// <remarks/>
    public event copyCompletedEventHandler copyCompleted;
    
    /// <remarks/>
    public event createDirectoryCompletedEventHandler createDirectoryCompleted;
    
    /// <remarks/>
    public event createFileCompletedEventHandler createFileCompleted;
    
    /// <remarks/>
    public event getIDCompletedEventHandler getIDCompleted;
    
    /// <remarks/>
    public event existsPathCompletedEventHandler existsPathCompleted;
    
    /// <remarks/>
    public event getDirectoryEntriesCompletedEventHandler getDirectoryEntriesCompleted;
    
    /// <remarks/>
    public event getFileCompletedEventHandler getFileCompleted;
    
    /// <remarks/>
    public event getFreeSpaceCompletedEventHandler getFreeSpaceCompleted;
    
    /// <remarks/>
    public event getSizeCompletedEventHandler getSizeCompleted;
    
    /// <remarks/>
    public event getStatFSCompletedEventHandler getStatFSCompleted;
    
    /// <remarks/>
    public event moveCompletedEventHandler moveCompleted;
    
    /// <remarks/>
    public event readFileCompletedEventHandler readFileCompleted;
    
    /// <remarks/>
    public event removeDirectoryCompletedEventHandler removeDirectoryCompleted;
    
    /// <remarks/>
    public event removeFileCompletedEventHandler removeFileCompleted;
    
    /// <remarks/>
    public event setFilePropertiesCompletedEventHandler setFilePropertiesCompleted;
    
    /// <remarks/>
    public event setFilePropertyCompletedEventHandler setFilePropertyCompleted;
    
    /// <remarks/>
    public event truncateFileCompletedEventHandler truncateFileCompleted;
    
    /// <remarks/>
    public event writeFileCompletedEventHandler writeFileCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("clearFile", RequestNamespace="http://storagemanager.storage.IoT.eu.com", ResponseNamespace="http://storagemanager.storage.IoT.eu.com")]
    [return: System.Xml.Serialization.SoapElementAttribute("clearFileReturn")]
    public string clearFile(string path) {
        object[] results = this.Invoke("clearFile", new object[] {
                    path});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginclearFile(string path, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("clearFile", new object[] {
                    path}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndclearFile(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void clearFileAsync(string path) {
        this.clearFileAsync(path, null);
    }
    
    /// <remarks/>
    public void clearFileAsync(string path, object userState) {
        if ((this.clearFileOperationCompleted == null)) {
            this.clearFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnclearFileOperationCompleted);
        }
        this.InvokeAsync("clearFile", new object[] {
                    path}, this.clearFileOperationCompleted, userState);
    }
    
    private void OnclearFileOperationCompleted(object arg) {
        if ((this.clearFileCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.clearFileCompleted(this, new clearFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("copy", RequestNamespace="http://storagemanager.storage.IoT.eu.com", ResponseNamespace="http://storagemanager.storage.IoT.eu.com")]
    [return: System.Xml.Serialization.SoapElementAttribute("copyReturn")]
    public string copy(string source, string destination) {
        object[] results = this.Invoke("copy", new object[] {
                    source,
                    destination});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult Begincopy(string source, string destination, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("copy", new object[] {
                    source,
                    destination}, callback, asyncState);
    }
    
    /// <remarks/>
    public string Endcopy(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void copyAsync(string source, string destination) {
        this.copyAsync(source, destination, null);
    }
    
    /// <remarks/>
    public void copyAsync(string source, string destination, object userState) {
        if ((this.copyOperationCompleted == null)) {
            this.copyOperationCompleted = new System.Threading.SendOrPostCallback(this.OncopyOperationCompleted);
        }
        this.InvokeAsync("copy", new object[] {
                    source,
                    destination}, this.copyOperationCompleted, userState);
    }
    
    private void OncopyOperationCompleted(object arg) {
        if ((this.copyCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.copyCompleted(this, new copyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("createDirectory", RequestNamespace="http://storagemanager.storage.IoT.eu.com", ResponseNamespace="http://storagemanager.storage.IoT.eu.com")]
    [return: System.Xml.Serialization.SoapElementAttribute("createDirectoryReturn")]
    public string createDirectory(string path) {
        object[] results = this.Invoke("createDirectory", new object[] {
                    path});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegincreateDirectory(string path, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("createDirectory", new object[] {
                    path}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndcreateDirectory(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void createDirectoryAsync(string path) {
        this.createDirectoryAsync(path, null);
    }
    
    /// <remarks/>
    public void createDirectoryAsync(string path, object userState) {
        if ((this.createDirectoryOperationCompleted == null)) {
            this.createDirectoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateDirectoryOperationCompleted);
        }
        this.InvokeAsync("createDirectory", new object[] {
                    path}, this.createDirectoryOperationCompleted, userState);
    }
    
    private void OncreateDirectoryOperationCompleted(object arg) {
        if ((this.createDirectoryCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.createDirectoryCompleted(this, new createDirectoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("createFile", RequestNamespace="http://storagemanager.storage.IoT.eu.com", ResponseNamespace="http://storagemanager.storage.IoT.eu.com")]
    [return: System.Xml.Serialization.SoapElementAttribute("createFileReturn")]
    public string createFile(string path, string properties) {
        object[] results = this.Invoke("createFile", new object[] {
                    path,
                    properties});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegincreateFile(string path, string properties, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("createFile", new object[] {
                    path,
                    properties}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndcreateFile(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void createFileAsync(string path, string properties) {
        this.createFileAsync(path, properties, null);
    }
    
    /// <remarks/>
    public void createFileAsync(string path, string properties, object userState) {
        if ((this.createFileOperationCompleted == null)) {
            this.createFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateFileOperationCompleted);
        }
        this.InvokeAsync("createFile", new object[] {
                    path,
                    properties}, this.createFileOperationCompleted, userState);
    }
    
    private void OncreateFileOperationCompleted(object arg) {
        if ((this.createFileCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.createFileCompleted(this, new createFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("getID", RequestNamespace="http://storagemanager.storage.IoT.eu.com", ResponseNamespace="http://storagemanager.storage.IoT.eu.com")]
    [return: System.Xml.Serialization.SoapElementAttribute("getIDReturn")]
    public string getID() {
        object[] results = this.Invoke("getID", new object[0]);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetID(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getID", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public string EndgetID(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void getIDAsync() {
        this.getIDAsync(null);
    }
    
    /// <remarks/>
    public void getIDAsync(object userState) {
        if ((this.getIDOperationCompleted == null)) {
            this.getIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetIDOperationCompleted);
        }
        this.InvokeAsync("getID", new object[0], this.getIDOperationCompleted, userState);
    }
    
    private void OngetIDOperationCompleted(object arg) {
        if ((this.getIDCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getIDCompleted(this, new getIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("existsPath", RequestNamespace="http://storagemanager.storage.IoT.eu.com", ResponseNamespace="http://storagemanager.storage.IoT.eu.com")]
    [return: System.Xml.Serialization.SoapElementAttribute("existsPathReturn")]
    public string existsPath(string path) {
        object[] results = this.Invoke("existsPath", new object[] {
                    path});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginexistsPath(string path, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("existsPath", new object[] {
                    path}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndexistsPath(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void existsPathAsync(string path) {
        this.existsPathAsync(path, null);
    }
    
    /// <remarks/>
    public void existsPathAsync(string path, object userState) {
        if ((this.existsPathOperationCompleted == null)) {
            this.existsPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexistsPathOperationCompleted);
        }
        this.InvokeAsync("existsPath", new object[] {
                    path}, this.existsPathOperationCompleted, userState);
    }
    
    private void OnexistsPathOperationCompleted(object arg) {
        if ((this.existsPathCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.existsPathCompleted(this, new existsPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("getDirectoryEntries", RequestNamespace="http://storagemanager.storage.IoT.eu.com", ResponseNamespace="http://storagemanager.storage.IoT.eu.com")]
    [return: System.Xml.Serialization.SoapElementAttribute("getDirectoryEntriesReturn")]
    public string getDirectoryEntries(string path) {
        object[] results = this.Invoke("getDirectoryEntries", new object[] {
                    path});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetDirectoryEntries(string path, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getDirectoryEntries", new object[] {
                    path}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndgetDirectoryEntries(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void getDirectoryEntriesAsync(string path) {
        this.getDirectoryEntriesAsync(path, null);
    }
    
    /// <remarks/>
    public void getDirectoryEntriesAsync(string path, object userState) {
        if ((this.getDirectoryEntriesOperationCompleted == null)) {
            this.getDirectoryEntriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDirectoryEntriesOperationCompleted);
        }
        this.InvokeAsync("getDirectoryEntries", new object[] {
                    path}, this.getDirectoryEntriesOperationCompleted, userState);
    }
    
    private void OngetDirectoryEntriesOperationCompleted(object arg) {
        if ((this.getDirectoryEntriesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getDirectoryEntriesCompleted(this, new getDirectoryEntriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("getFile", RequestNamespace="http://storagemanager.storage.IoT.eu.com", ResponseNamespace="http://storagemanager.storage.IoT.eu.com")]
    [return: System.Xml.Serialization.SoapElementAttribute("getFileReturn")]
    public string getFile(string path) {
        object[] results = this.Invoke("getFile", new object[] {
                    path});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetFile(string path, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getFile", new object[] {
                    path}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndgetFile(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void getFileAsync(string path) {
        this.getFileAsync(path, null);
    }
    
    /// <remarks/>
    public void getFileAsync(string path, object userState) {
        if ((this.getFileOperationCompleted == null)) {
            this.getFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFileOperationCompleted);
        }
        this.InvokeAsync("getFile", new object[] {
                    path}, this.getFileOperationCompleted, userState);
    }
    
    private void OngetFileOperationCompleted(object arg) {
        if ((this.getFileCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getFileCompleted(this, new getFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("getFreeSpace", RequestNamespace="http://storagemanager.storage.IoT.eu.com", ResponseNamespace="http://storagemanager.storage.IoT.eu.com")]
    [return: System.Xml.Serialization.SoapElementAttribute("getFreeSpaceReturn")]
    public string getFreeSpace() {
        object[] results = this.Invoke("getFreeSpace", new object[0]);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetFreeSpace(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getFreeSpace", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public string EndgetFreeSpace(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void getFreeSpaceAsync() {
        this.getFreeSpaceAsync(null);
    }
    
    /// <remarks/>
    public void getFreeSpaceAsync(object userState) {
        if ((this.getFreeSpaceOperationCompleted == null)) {
            this.getFreeSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFreeSpaceOperationCompleted);
        }
        this.InvokeAsync("getFreeSpace", new object[0], this.getFreeSpaceOperationCompleted, userState);
    }
    
    private void OngetFreeSpaceOperationCompleted(object arg) {
        if ((this.getFreeSpaceCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getFreeSpaceCompleted(this, new getFreeSpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("getSize", RequestNamespace="http://storagemanager.storage.IoT.eu.com", ResponseNamespace="http://storagemanager.storage.IoT.eu.com")]
    [return: System.Xml.Serialization.SoapElementAttribute("getSizeReturn")]
    public string getSize() {
        object[] results = this.Invoke("getSize", new object[0]);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetSize(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getSize", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public string EndgetSize(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void getSizeAsync() {
        this.getSizeAsync(null);
    }
    
    /// <remarks/>
    public void getSizeAsync(object userState) {
        if ((this.getSizeOperationCompleted == null)) {
            this.getSizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSizeOperationCompleted);
        }
        this.InvokeAsync("getSize", new object[0], this.getSizeOperationCompleted, userState);
    }
    
    private void OngetSizeOperationCompleted(object arg) {
        if ((this.getSizeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getSizeCompleted(this, new getSizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("getStatFS", RequestNamespace="http://storagemanager.storage.IoT.eu.com", ResponseNamespace="http://storagemanager.storage.IoT.eu.com")]
    [return: System.Xml.Serialization.SoapElementAttribute("getStatFSReturn")]
    public string getStatFS() {
        object[] results = this.Invoke("getStatFS", new object[0]);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetStatFS(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getStatFS", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public string EndgetStatFS(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void getStatFSAsync() {
        this.getStatFSAsync(null);
    }
    
    /// <remarks/>
    public void getStatFSAsync(object userState) {
        if ((this.getStatFSOperationCompleted == null)) {
            this.getStatFSOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStatFSOperationCompleted);
        }
        this.InvokeAsync("getStatFS", new object[0], this.getStatFSOperationCompleted, userState);
    }
    
    private void OngetStatFSOperationCompleted(object arg) {
        if ((this.getStatFSCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getStatFSCompleted(this, new getStatFSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("move", RequestNamespace="http://storagemanager.storage.IoT.eu.com", ResponseNamespace="http://storagemanager.storage.IoT.eu.com")]
    [return: System.Xml.Serialization.SoapElementAttribute("moveReturn")]
    public string move(string source, string destination) {
        object[] results = this.Invoke("move", new object[] {
                    source,
                    destination});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult Beginmove(string source, string destination, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("move", new object[] {
                    source,
                    destination}, callback, asyncState);
    }
    
    /// <remarks/>
    public string Endmove(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void moveAsync(string source, string destination) {
        this.moveAsync(source, destination, null);
    }
    
    /// <remarks/>
    public void moveAsync(string source, string destination, object userState) {
        if ((this.moveOperationCompleted == null)) {
            this.moveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmoveOperationCompleted);
        }
        this.InvokeAsync("move", new object[] {
                    source,
                    destination}, this.moveOperationCompleted, userState);
    }
    
    private void OnmoveOperationCompleted(object arg) {
        if ((this.moveCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.moveCompleted(this, new moveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("readFile", RequestNamespace="http://storagemanager.storage.IoT.eu.com", ResponseNamespace="http://storagemanager.storage.IoT.eu.com")]
    [return: System.Xml.Serialization.SoapElementAttribute("readFileReturn")]
    public string readFile(string path, string start, string size) {
        object[] results = this.Invoke("readFile", new object[] {
                    path,
                    start,
                    size});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginreadFile(string path, string start, string size, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("readFile", new object[] {
                    path,
                    start,
                    size}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndreadFile(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void readFileAsync(string path, string start, string size) {
        this.readFileAsync(path, start, size, null);
    }
    
    /// <remarks/>
    public void readFileAsync(string path, string start, string size, object userState) {
        if ((this.readFileOperationCompleted == null)) {
            this.readFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreadFileOperationCompleted);
        }
        this.InvokeAsync("readFile", new object[] {
                    path,
                    start,
                    size}, this.readFileOperationCompleted, userState);
    }
    
    private void OnreadFileOperationCompleted(object arg) {
        if ((this.readFileCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.readFileCompleted(this, new readFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("removeDirectory", RequestNamespace="http://storagemanager.storage.IoT.eu.com", ResponseNamespace="http://storagemanager.storage.IoT.eu.com")]
    [return: System.Xml.Serialization.SoapElementAttribute("removeDirectoryReturn")]
    public string removeDirectory(string path, bool recursive) {
        object[] results = this.Invoke("removeDirectory", new object[] {
                    path,
                    recursive});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveDirectory(string path, bool recursive, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeDirectory", new object[] {
                    path,
                    recursive}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndremoveDirectory(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void removeDirectoryAsync(string path, bool recursive) {
        this.removeDirectoryAsync(path, recursive, null);
    }
    
    /// <remarks/>
    public void removeDirectoryAsync(string path, bool recursive, object userState) {
        if ((this.removeDirectoryOperationCompleted == null)) {
            this.removeDirectoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveDirectoryOperationCompleted);
        }
        this.InvokeAsync("removeDirectory", new object[] {
                    path,
                    recursive}, this.removeDirectoryOperationCompleted, userState);
    }
    
    private void OnremoveDirectoryOperationCompleted(object arg) {
        if ((this.removeDirectoryCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.removeDirectoryCompleted(this, new removeDirectoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("removeFile", RequestNamespace="http://storagemanager.storage.IoT.eu.com", ResponseNamespace="http://storagemanager.storage.IoT.eu.com")]
    [return: System.Xml.Serialization.SoapElementAttribute("removeFileReturn")]
    public string removeFile(string path) {
        object[] results = this.Invoke("removeFile", new object[] {
                    path});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveFile(string path, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeFile", new object[] {
                    path}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndremoveFile(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void removeFileAsync(string path) {
        this.removeFileAsync(path, null);
    }
    
    /// <remarks/>
    public void removeFileAsync(string path, object userState) {
        if ((this.removeFileOperationCompleted == null)) {
            this.removeFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveFileOperationCompleted);
        }
        this.InvokeAsync("removeFile", new object[] {
                    path}, this.removeFileOperationCompleted, userState);
    }
    
    private void OnremoveFileOperationCompleted(object arg) {
        if ((this.removeFileCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.removeFileCompleted(this, new removeFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("setFileProperties", RequestNamespace="http://storagemanager.storage.IoT.eu.com", ResponseNamespace="http://storagemanager.storage.IoT.eu.com")]
    [return: System.Xml.Serialization.SoapElementAttribute("createFileReturn")]
    public string setFileProperties(string path, string properties) {
        object[] results = this.Invoke("setFileProperties", new object[] {
                    path,
                    properties});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginsetFileProperties(string path, string properties, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("setFileProperties", new object[] {
                    path,
                    properties}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndsetFileProperties(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void setFilePropertiesAsync(string path, string properties) {
        this.setFilePropertiesAsync(path, properties, null);
    }
    
    /// <remarks/>
    public void setFilePropertiesAsync(string path, string properties, object userState) {
        if ((this.setFilePropertiesOperationCompleted == null)) {
            this.setFilePropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetFilePropertiesOperationCompleted);
        }
        this.InvokeAsync("setFileProperties", new object[] {
                    path,
                    properties}, this.setFilePropertiesOperationCompleted, userState);
    }
    
    private void OnsetFilePropertiesOperationCompleted(object arg) {
        if ((this.setFilePropertiesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.setFilePropertiesCompleted(this, new setFilePropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("setFileProperty", RequestNamespace="http://storagemanager.storage.IoT.eu.com", ResponseNamespace="http://storagemanager.storage.IoT.eu.com")]
    [return: System.Xml.Serialization.SoapElementAttribute("createFileReturn")]
    public string setFileProperty(string path, string propertiesName, string propertiesValue) {
        object[] results = this.Invoke("setFileProperty", new object[] {
                    path,
                    propertiesName,
                    propertiesValue});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginsetFileProperty(string path, string propertiesName, string propertiesValue, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("setFileProperty", new object[] {
                    path,
                    propertiesName,
                    propertiesValue}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndsetFileProperty(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void setFilePropertyAsync(string path, string propertiesName, string propertiesValue) {
        this.setFilePropertyAsync(path, propertiesName, propertiesValue, null);
    }
    
    /// <remarks/>
    public void setFilePropertyAsync(string path, string propertiesName, string propertiesValue, object userState) {
        if ((this.setFilePropertyOperationCompleted == null)) {
            this.setFilePropertyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetFilePropertyOperationCompleted);
        }
        this.InvokeAsync("setFileProperty", new object[] {
                    path,
                    propertiesName,
                    propertiesValue}, this.setFilePropertyOperationCompleted, userState);
    }
    
    private void OnsetFilePropertyOperationCompleted(object arg) {
        if ((this.setFilePropertyCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.setFilePropertyCompleted(this, new setFilePropertyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("truncateFile", RequestNamespace="http://storagemanager.storage.IoT.eu.com", ResponseNamespace="http://storagemanager.storage.IoT.eu.com")]
    [return: System.Xml.Serialization.SoapElementAttribute("truncateFileReturn")]
    public string truncateFile(string path, string size) {
        object[] results = this.Invoke("truncateFile", new object[] {
                    path,
                    size});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegintruncateFile(string path, string size, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("truncateFile", new object[] {
                    path,
                    size}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndtruncateFile(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void truncateFileAsync(string path, string size) {
        this.truncateFileAsync(path, size, null);
    }
    
    /// <remarks/>
    public void truncateFileAsync(string path, string size, object userState) {
        if ((this.truncateFileOperationCompleted == null)) {
            this.truncateFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OntruncateFileOperationCompleted);
        }
        this.InvokeAsync("truncateFile", new object[] {
                    path,
                    size}, this.truncateFileOperationCompleted, userState);
    }
    
    private void OntruncateFileOperationCompleted(object arg) {
        if ((this.truncateFileCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.truncateFileCompleted(this, new truncateFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("writeFile", RequestNamespace="http://storagemanager.storage.IoT.eu.com", ResponseNamespace="http://storagemanager.storage.IoT.eu.com")]
    [return: System.Xml.Serialization.SoapElementAttribute("writeFileReturn")]
    public string writeFile(string path, string start, string data) {
        object[] results = this.Invoke("writeFile", new object[] {
                    path,
                    start,
                    data});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginwriteFile(string path, string start, string data, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("writeFile", new object[] {
                    path,
                    start,
                    data}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndwriteFile(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void writeFileAsync(string path, string start, string data) {
        this.writeFileAsync(path, start, data, null);
    }
    
    /// <remarks/>
    public void writeFileAsync(string path, string start, string data, object userState) {
        if ((this.writeFileOperationCompleted == null)) {
            this.writeFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwriteFileOperationCompleted);
        }
        this.InvokeAsync("writeFile", new object[] {
                    path,
                    start,
                    data}, this.writeFileOperationCompleted, userState);
    }
    
    private void OnwriteFileOperationCompleted(object arg) {
        if ((this.writeFileCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.writeFileCompleted(this, new writeFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void clearFileCompletedEventHandler(object sender, clearFileCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class clearFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal clearFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void copyCompletedEventHandler(object sender, copyCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class copyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal copyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void createDirectoryCompletedEventHandler(object sender, createDirectoryCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class createDirectoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal createDirectoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void createFileCompletedEventHandler(object sender, createFileCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class createFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal createFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void getIDCompletedEventHandler(object sender, getIDCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void existsPathCompletedEventHandler(object sender, existsPathCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class existsPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal existsPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void getDirectoryEntriesCompletedEventHandler(object sender, getDirectoryEntriesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getDirectoryEntriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getDirectoryEntriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void getFileCompletedEventHandler(object sender, getFileCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void getFreeSpaceCompletedEventHandler(object sender, getFreeSpaceCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getFreeSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getFreeSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void getSizeCompletedEventHandler(object sender, getSizeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getSizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getSizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void getStatFSCompletedEventHandler(object sender, getStatFSCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getStatFSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getStatFSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void moveCompletedEventHandler(object sender, moveCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class moveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal moveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void readFileCompletedEventHandler(object sender, readFileCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class readFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal readFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void removeDirectoryCompletedEventHandler(object sender, removeDirectoryCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class removeDirectoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal removeDirectoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void removeFileCompletedEventHandler(object sender, removeFileCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class removeFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal removeFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void setFilePropertiesCompletedEventHandler(object sender, setFilePropertiesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class setFilePropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal setFilePropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void setFilePropertyCompletedEventHandler(object sender, setFilePropertyCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class setFilePropertyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal setFilePropertyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void truncateFileCompletedEventHandler(object sender, truncateFileCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class truncateFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal truncateFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void writeFileCompletedEventHandler(object sender, writeFileCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class writeFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal writeFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}
